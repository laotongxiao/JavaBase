package animal.test01;

abstract class Animal {
	abstract void eat();//可有可无抽象办法而没有办法体,如果是实际办法一定要办法体如 public void eat(){};
}

-----------------------------class-----------------------------

package animal.test01;

public class Cat extends Animal {
    //一定要实现抽象办法
    public void eat() {  
        System.out.println("吃鱼");  
    }  
    public void work() {  
        System.out.println("抓老鼠");  
    }  
}

-----------------------------class-----------------------------

package animal.test01;

public class Dog extends Animal {
   //一定要实现抽象办法
    public void eat() {  
        System.out.println("吃骨头");  
    }  
    public void work() {  
        System.out.println("看家");  
    }  
}

-----------------------------class-----------------------------

package animal.test01;

public class AnimalMain {
	public static void main(String arg[]) {
		Cat a2 = new Cat();
		Dog a3 =new Dog();
		show(a2);
		show(a3);
	}
	public static void show(Animal a1) {
	      a1.eat();  
	        // 类型判断
	        if (a1 instanceof Cat)  {  // 猫做的事情 
	            Cat c = (Cat)a1;  
	            c.work();  
	        } else if (a1 instanceof Dog) { // 狗做的事情 
	            Dog c = (Dog)a1;  
	            c.work();  
	        } 
	}
}